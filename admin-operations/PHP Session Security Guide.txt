
Secure Session Management in PHP
=================================

Below are practical tips and examples for managing sessions securely in PHP.

1. Start Session Securely
--------------------------
Use these settings before calling `session_start()`:

```php
ini_set('session.cookie_httponly', 1); // Prevent JavaScript access to session cookie
ini_set('session.cookie_secure', 1);   // Send cookie only over HTTPS
ini_set('session.use_strict_mode', 1); // Prevent uninitialized session use
session_name('SECURESESSID');          // Custom session name (optional)
session_start();
```

2. Regenerate Session ID on Login
---------------------------------
```php
if ($user_authenticated) {
    session_regenerate_id(true); // Replace the session ID to prevent fixation
}
```

3. Set Session Timeout
----------------------
```php
$timeout = 900; // 15 minutes

if (isset($_SESSION['LAST_ACTIVITY']) && (time() - $_SESSION['LAST_ACTIVITY'] > $timeout)) {
    session_unset();
    session_destroy();
    header("Location: login.php");
    exit();
}
$_SESSION['LAST_ACTIVITY'] = time();
```

4. Bind Session to IP/User-Agent
--------------------------------
```php
function isSessionValid() {
    if (!isset($_SESSION['IP']) || $_SESSION['IP'] !== $_SERVER['REMOTE_ADDR']) return false;
    if (!isset($_SESSION['USER_AGENT']) || $_SESSION['USER_AGENT'] !== $_SERVER['HTTP_USER_AGENT']) return false;
    return true;
}

// On session start
$_SESSION['IP'] = $_SERVER['REMOTE_ADDR'];
$_SESSION['USER_AGENT'] = $_SERVER['HTTP_USER_AGENT'];
```

5. Logout and Destroy Session
-----------------------------
```php
session_start();
$_SESSION = [];
session_destroy();
setcookie(session_name(), '', time() - 3600, '/'); // Clear the cookie
```

6. Secure Configuration in php.ini
----------------------------------
```
session.cookie_secure = 1
session.cookie_httponly = 1
session.use_only_cookies = 1
session.use_strict_mode = 1
```
Apply these in your php.ini or via `ini_set()`.

7. Avoid Passing Session IDs in URLs
------------------------------------
Ensure `session.use_trans_sid = 0` in php.ini to prevent session IDs in URLs.

8. Use Server-Side Storage Only
-------------------------------
Never store sensitive session data on the client side.

9. Monitor Sessions (Optional)
------------------------------
Log session creation, timeout, and IP changes to detect hijacking attempts.

